version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: examplepassword
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "1883:1883"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    command: >
      bash -c "
      rabbitmq-plugins enable --offline rabbitmq_mqtt &&
      rabbitmq-server
      "
      
  consumer:
    build:
      context: ../src/data-gatherer
      dockerfile: Dockerfile
    depends_on:
      - mysql
      - rabbitmq
    environment:
      DB_USER: exampleuser
      DB_PASS: examplepass
      DB_HOST: mysql
      DB_NAME: exampledb
      MQTT_HOST: rabbitmq
      MQTT_PORT: "1883"
      MQTT_USER: user
      MQTT_PASS: password
    restart: unless-stopped

  api:
    build:
      context: ../src/api-room
      dockerfile: Dockerfile
    depends_on:
      - mysql
    environment:
      DB_USER: exampleuser
      DB_PASS: examplepass
      DB_HOST: mysql
      DB_NAME: exampledb
    ports:
      - "8080:8080"
    restart: unless-stopped

  web-ui:
    build:
      context: ../src/web-ui-new
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api
    restart: unless-stopped

volumes:
  mysql_data:
  rabbitmq_data: